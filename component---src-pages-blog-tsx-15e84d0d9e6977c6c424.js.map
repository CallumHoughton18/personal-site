{"version":3,"sources":["webpack:///./src/hooks/useBlogPostsQuery.ts","webpack:///./src/components/page components/blog/PostSummary.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/hooks/useHasScrolled.ts","webpack:///./src/hooks/useNavLinksQuery.ts","webpack:///./src/components/navigation/NavBar.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/layout/PageWithHeader.tsx"],"names":["useBlogPostsQuery","useStaticQuery","PostSummary","title","excerpt","date","postInternalLink","className","href","target","rel","to","Blog","postSummaries","blog","posts","map","post","key","id","frontmatter","author","postExternalLink","externalUrl","fields","slug","header","Header","useHasScrolled","offsetFromTop","useState","hasScrolled","setHasScrolled","useEffect","onScroll","currentPosition","window","pageYOffset","addEventListener","removeEventListener","useNavLinksQuery","NavBar","props","titleStyle","navItemsStyle","navItems","siteMetaData","site","siteMetadata","menuLinks","link","indx","name","PageWithNavBar","children","Fragment"],"mappings":"iKA0BeA,EAvBW,WAoBxB,OAnBcC,YAAc,eCkDfC,EA1CK,SAAC,GAKgB,IAJnCC,EAImC,EAJnCA,MACAC,EAGmC,EAHnCA,QACAC,EAEmC,EAFnCA,KACAC,EACmC,EADnCA,iBAEA,OACE,6BAASC,UAAU,+DACjB,yBAAKA,UAAU,qCACb,0BAAMA,UAAU,uCAAuCF,GACvD,uBACEE,UAAU,wEACVC,KAAK,IACLC,OAAO,SACPC,IAAI,uBAJN,eASF,yBAAKH,UAAU,QACb,0BAAMA,UAAU,2CAA2CJ,GAC3D,uBAAGI,UAAU,iCAAiCH,IAEhD,yBAAKG,UAAU,0CACb,kBAAC,IAAD,CACEI,GAAIL,EACJC,UAAU,2FAFZ,gBCTOK,UArBF,WACX,IACMC,EADQb,IACcc,KAAKC,MAAMC,KAAI,SAAAC,GAAI,OAC7C,kBAAC,EAAD,CACEC,IAAKD,EAAKE,GACVhB,MAAOc,EAAKG,YAAYjB,MACxBkB,OAAQJ,EAAKG,YAAYC,OACzBhB,KAAMY,EAAKG,YAAYf,KACvBD,QAASa,EAAKb,QACdkB,iBAAkBL,EAAKG,YAAYG,YACnCjB,iBAAkBW,EAAKO,OAAOC,UAGlC,OACE,kBAAC,IAAD,CAAgBC,OAAQ,kBAACC,EAAA,EAAD,OACtB,yBAAKpB,UAAU,8CACZM,M,2DCFMe,EAlBQ,SAACC,GAAmC,MACnBC,oBAAS,GAAxCC,EADkD,KACrCC,EADqC,KAezD,OAZAC,qBAAU,WACR,SAASC,IACP,IAAMC,EAAkBC,OAAOC,YAE3BL,EADJG,EAAkBN,GAMpB,OAFAO,OAAOE,iBAAiB,SAAUJ,GAClCA,IACO,kBAAME,OAAOG,oBAAoB,SAAUL,MACjD,CAACL,EAAeE,IAEZA,G,YCGMS,EAjBU,WAcvB,OAbevC,YAAc,eCuBhBwC,EAzBA,SAACC,GACd,OACE,yBACEnC,UAAS,8DAAgEmC,EAAMnC,WAE/E,yBAAKA,UAAU,sEACb,yBAAKA,UAAU,2HACb,uBACEA,UAAS,6DAA+DmC,EAAMC,WAArE,yBAERD,EAAMvC,QAGX,yBAAKI,UAAU,+BACb,wBACEA,UAAS,2FAA6FmC,EAAME,eAE3GF,EAAMG,cCqBJlB,IAlCA,WACb,IAAMI,EAAcH,EAAe,IAC7BkB,EAAeN,IACrBM,EAAaC,KAAKC,aAAaC,UAAU,GACzC,IAAMJ,EAAWC,EAAaC,KAAKC,aAAaC,UAAUjC,KACxD,SAACkC,EAAMC,GAYL,OAVE,wBACEjC,IAAQgC,EAAKE,KAAV,IAAkBD,EACrB5C,UAAU,sKAGV,kBAAC,IAAD,CAAMI,GAAIuC,EAAKA,KAAM3C,UAAU,IAC5B2C,EAAKE,UAQhB,OACE,kBAAC,EAAD,CACEjD,MAAM,mBACN0C,SAAUA,EACVF,WAAW,iEACXC,cAAc,GACdrC,UAAS,qEACPwB,EAAc,kCAAoC,sB,kCClC1D,yBAoBesB,IAbQ,SAAC,GAGgB,IAFtC3B,EAEsC,EAFtCA,OACA4B,EACsC,EADtCA,SAGA,OACE,kBAAC,IAAMC,SAAP,KACE,4BAAQhD,UAAU,wBAAwBmB,GAC1C,0BAAMnB,UAAU,uBAAuB+C","file":"component---src-pages-blog-tsx-15e84d0d9e6977c6c424.js","sourcesContent":["import { BlogPostsQuery } from \"@/__autogenerated__/gatsby-graphql\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst useBlogPostsQuery = (): BlogPostsQuery => {\n  const posts = useStaticQuery<BlogPostsQuery>(graphql`\n    query blogPosts {\n      blog: allMarkdownRemark {\n        posts: nodes {\n          frontmatter {\n            date(fromNow: true)\n            title\n            author\n            externalUrl\n          }\n          excerpt\n          id\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  `);\n  return posts;\n};\n\nexport default useBlogPostsQuery;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\n\ntype PostSummaryProps = {\n  title: string;\n  author: string;\n  excerpt: string;\n  date: string;\n  postExternalLink: string;\n  postInternalLink: string;\n};\n\nconst PostSummary = ({\n  title,\n  excerpt,\n  date,\n  postInternalLink,\n}: PostSummaryProps): JSX.Element => {\n  return (\n    <article className=\"max-w-4xl px-10 my-4 py-6 bg-snowStorm rounded-lg shadow-md\">\n      <div className=\"flex justify-between items-center\">\n        <span className=\"font-light text-polarNight-lightest\">{date}</span>\n        <a\n          className=\"px-2 py-1 text-blueGray-500 font-bold rounded hover:text-blueGray-700\"\n          href=\"#\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          #blog-post\n        </a>\n      </div>\n      <div className=\"mt-5\">\n        <span className=\"font-bold text-lg to-polarNight-darkest\">{title}</span>\n        <p className=\"mt-5 text-polarNight-lightest\">{excerpt}</p>\n      </div>\n      <div className=\"flex justify-between items-center mt-8\">\n        <Link\n          to={postInternalLink}\n          className=\"px-2 py-1 bg-polarNight text-snowStorm-lightest font-bold rounded hover:bg-blueGray-500\"\n        >\n          read more\n        </Link>\n        {/* <a\n          className=\"px-2 py-1 bg-polarNight text-snowStorm-lightest font-bold rounded hover:bg-blueGray-500\"\n          href={postLink}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        > */}\n        {/* </a> */}\n      </div>\n    </article>\n  );\n};\n\nexport default PostSummary;\n","import React from \"react\";\nimport Header from \"@/components/Header\";\nimport PageWithNavBar from \"@/components/layout/PageWithHeader\";\nimport useBlogPostsQuery from \"@/hooks/useBlogPostsQuery\";\nimport PostSummary from \"@/components/page components/blog/PostSummary\";\n\nconst Blog = (): JSX.Element => {\n  const posts = useBlogPostsQuery();\n  const postSummaries = posts.blog.posts.map(post => (\n    <PostSummary\n      key={post.id}\n      title={post.frontmatter.title}\n      author={post.frontmatter.author}\n      date={post.frontmatter.date}\n      excerpt={post.excerpt}\n      postExternalLink={post.frontmatter.externalUrl}\n      postInternalLink={post.fields.slug}\n    />\n  ));\n  return (\n    <PageWithNavBar header={<Header />}>\n      <div className=\"flex justify-center items-center mr-5 ml-5\">\n        {postSummaries}\n      </div>\n    </PageWithNavBar>\n  );\n};\nexport default Blog;\n","import { useEffect, useState } from \"react\";\n\nconst useHasScrolled = (offsetFromTop: number): boolean => {\n  const [hasScrolled, setHasScrolled] = useState(false);\n\n  useEffect(() => {\n    function onScroll() {\n      const currentPosition = window.pageYOffset;\n      currentPosition > offsetFromTop\n        ? setHasScrolled(true)\n        : setHasScrolled(false);\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    onScroll();\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [offsetFromTop, hasScrolled]);\n\n  return hasScrolled;\n};\n\nexport default useHasScrolled;\n","import { SiteQueryQuery } from \"@/__autogenerated__/gatsby-graphql\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst useNavLinksQuery = (): SiteQueryQuery => {\n  const images = useStaticQuery<SiteQueryQuery>(graphql`\n    query SiteQuery {\n      site {\n        siteMetadata {\n          title\n          menuLinks {\n            name\n            link\n          }\n        }\n      }\n    }\n  `);\n  return images;\n};\n\nexport default useNavLinksQuery;\n","import React from \"react\";\n\nconst NavBar = (props: NavBarProps): JSX.Element => {\n  return (\n    <nav\n      className={`flex flex-wrap items-center justify-between px-2 py-2 mb-3 ${props.className}`}\n    >\n      <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n        <div className=\"max-h-0 max-w-0 sm:max-w-full sm:max-h-full relative flex justify-between sm:w-auto sm:static sm:block sm:justify-start\">\n          <a\n            className={`leading-relaxed inline-block mr-4 py-2 whitespace-no-wrap ${props.titleStyle} invisible sm:visible`}\n          >\n            {props.title}\n          </a>\n        </div>\n        <div className=\"flex flex-grow items-center\">\n          <ul\n            className={`flex flex-grow sm:flex-grow-0 flex-row sm:ml-auto justify-center items-center list-none ${props.navItemsStyle}`}\n          >\n            {props.navItems}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import useHasScrolled from \"@/hooks/useHasScrolled\";\nimport useNavLinksQuery from \"@/hooks/useNavLinksQuery\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport NavBar from \"./navigation/NavBar\";\n\nconst Header = (): JSX.Element => {\n  const hasScrolled = useHasScrolled(50);\n  const siteMetaData = useNavLinksQuery();\n  siteMetaData.site.siteMetadata.menuLinks[0];\n  const navItems = siteMetaData.site.siteMetadata.menuLinks.map(\n    (link, indx) => {\n      const navLinkJsx = (\n        <li\n          key={`${link.name}-${indx}`}\n          className=\" text-sm text-snowStorm-lightest uppercase tracking-wide font-bold py-2 ml-5 mr-5\n          hover:text-gray-300 focus:text-blueGray-300 active:text-blueGray-300 select-none\"\n        >\n          <Link to={link.link} className=\"\">\n            {link.name}\n          </Link>\n        </li>\n      );\n      return navLinkJsx;\n    },\n  );\n\n  return (\n    <NavBar\n      title=\"{ Callums.Site }\"\n      navItems={navItems}\n      titleStyle=\"text-snowStorm-lightest tracking-wide uppercase text font-bold\"\n      navItemsStyle=\"\"\n      className={`rounded-b-sm transition-colors duration-75 ease-linear text-base ${\n        hasScrolled ? \"bg-polarNight-lighter shadow-md\" : \"bg-transparent\"\n      }`}\n    ></NavBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\ntype PageWithNavBarProps = {\n  header: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst PageWithNavBar = ({\n  header,\n  children,\n}: PageWithNavBarProps): JSX.Element => {\n  //TODO: Issue here, if page is refreshed scrolled is always false\n  return (\n    <React.Fragment>\n      <header className=\"fixed z-50 inset-x-0\">{header}</header>\n      <main className=\"flex flex-col pt-12\">{children}</main>\n    </React.Fragment>\n  );\n};\n\nexport default PageWithNavBar;\n"],"sourceRoot":""}